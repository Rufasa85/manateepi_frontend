{"version":3,"sources":["components/Secret.js","components/LoginForm.js","components/SignUpForm.js","components/ManateeForm.js","components/Manatee.js","App.js","serviceWorker.js","index.js"],"names":["Secret","props","name","LoginForm","value","onChange","handleChange","password","type","onClick","handleLoginFormSubmit","SignUpForm","handleSignupFormSubmit","ManateeForm","manateeName","handleManateeCreate","Manatee","className","App","state","loggedInUser","url","manatees","event","target","setState","readSessions","axios","get","withCredentials","then","res","console","log","data","user","getAllManatees","catch","err","response","preventDefault","post","status","this","map","tee","key","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb0e8806.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Secret(props) {\n    return (\n        <div>\n            <h1>SECRETSSSS FOR {props.name} !!!!!</h1>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function LoginForm(props) {\n    return (\n        <div>\n            <h3>Login</h3>\n            <form>\n                <input name=\"name\" value={props.name} onChange={props.handleChange} />\n                <input name=\"password\" value={props.password} type=\"password\" onChange={props.handleChange} />\n                <input type=\"submit\" onClick={props.handleLoginFormSubmit} />\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function SignUpForm(props) {\n    return (\n        <div>\n            <h3>Signup</h3>\n            <form>\n                <input name=\"name\" value={props.name} onChange={props.handleChange} />\n                <input name=\"password\" value={props.password} type=\"password\" onChange={props.handleChange} />\n                <input type=\"submit\" onClick={props.handleSignupFormSubmit} />\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ManateeForm(props) {\n    return (\n        <div>\n            <h3>Add A Tee</h3>\n            <form>\n                <input name=\"manateeName\" value={props.manateeName} onChange={props.handleChange} />\n                <input type=\"submit\" onClick={props.handleManateeCreate} />\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport '../styles/Manatee.css'\n\nexport default function Manatee({name}) {\n    return (\n        <div className=\"Manatee\">\n            <h5>{name}</h5>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport axios from \"axios\";\nimport Secret from './components/Secret';\nimport LoginForm from './components/LoginForm';\nimport SignUpForm from './components/SignUpForm';\nimport ManateeForm from './components/ManateeForm';\nimport Manatee from './components/Manatee';\n\nexport default class App extends Component {\n  state = {\n    name:\"\",\n    password:\"\",\n    loggedInUser:\"\",\n    manateeName:\"\",\n    // url:\"http://localhost:8080\",\n    url:\"https://manateepi.herokuapp.com\",\n    manatees:[]\n  }\n  componentDidMount(){\n    this.readSessions();\n    this.getAllManatees();\n  }\n\n  handleChange= event=>{\n    const {name,value}=event.target;\n    this.setState({\n      [name]:value\n    })\n  }\n\n  readSessions = ()=>{\n    axios.get(`${this.state.url}/auth/readsessions`,{withCredentials:true}).then(res=>{\n      console.log(res.data)\n      this.setState({loggedInUser:res.data.user})\n    })\n  }\n  \n  getAllManatees = ()=>{\n    axios.get(`${this.state.url}/manatee`,{withCredentials:true}).then(res=>{\n      this.setState({\n        manatees:res.data\n      })\n    }).catch(err=>{\n      console.log(err.response);\n    })\n  }\n\n  handleLoginFormSubmit = event=>{\n    if(event){\n\n      event.preventDefault();\n    }\n    axios.post(`${this.state.url}/auth/login`,{name:this.state.name,password:this.state.password},{withCredentials:true}).then(res=>{\n      console.log(res.data,res.status)\n      this.setState({\n        name:\"\",\n        password:\"\",\n        loggedInUser:res.data.user\n      });\n      this.getAllManatees();\n    }).catch(err=>{\n      console.log(err.response);\n      this.setState({\n        name:\"\",\n        password:\"\",\n        loggedInUser:\"\"\n      })\n    })\n  }\n  handleSignupFormSubmit = event=>{\n    event.preventDefault();\n    axios.post(`${this.state.url}/auth/signup`,{name:this.state.name,password:this.state.password},{withCredentials:true}).then(res=>{\n      console.log(res.data,res.status)\n      this.handleLoginFormSubmit();\n    }).catch(err=>{\n      console.log(err.response);\n    })\n  }\n  handleManateeCreate=event=>{\n    event.preventDefault();\n    axios.post(`${this.state.url}/manatee`,{manateeName:this.state.manateeName},{withCredentials:true}).then(res=>{\n      this.setState({\n        manateeName:\"\"\n      })\n      this.getAllManatees();\n    }).catch(err=>{\n      console.log(err.response);\n    })\n  }\n\n  render() {\n    return (\n      <div>\n       <LoginForm name={this.state.name} password={this.state.password}handleChange={this.handleChange} handleLoginFormSubmit={this.handleLoginFormSubmit}/>\n       <SignUpForm name={this.state.name} password={this.state.password}handleChange={this.handleChange} handleSignupFormSubmit={this.handleSignupFormSubmit}/>\n        {this.state.loggedInUser?(\n          <div>\n            <Secret name={this.state.loggedInUser.name}/>\n            <ManateeForm manateeName={this.state.manateeName} handleChange={this.handleChange} handleManateeCreate={this.handleManateeCreate}/>\n            <h5>All the manatees!</h5>\n            {this.state.manatees.map(tee=><Manatee key={tee.id}name={tee.name}/>)}\n          </div>\n          ):(null)}\n        <button onClick={this.readSessions}>Readsessions</button>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}